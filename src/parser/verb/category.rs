use winnow::combinator::alt;
use winnow::error::StrContext;
use winnow::prelude::*;

/*
VerbCategory
    "IV¹"
    "IV²"
    "IV³"
    "IV⁴"
    "KT"
    "MV"
    "P¹"
    "P²"
    "P³"
    "RM¹"
    "RM²"
    "RM³"
    "RM⁴"
    "RP¹"
    "RP²"
    "RP³"
    "RP⁴"
    "RP⁵"
    "RP⁶"
    "RP⁷"
    "T¹"
    "T²"
    "T³"
    "T⁴"
    "T⁵"
    "ZP¹"
    "ZP²"
    "ZP³"
*/
#[derive(Clone, Debug)]
pub enum VerbCategory {
    IV1,
    IV2,
    IV3,
    IV4,
    KT,
    MV,
    P1,
    P2,
    P3,
    RM1,
    RM2,
    RM3,
    RM4,
    RP1,
    RP2,
    RP3,
    RP4,
    RP5,
    RP6,
    RP7,
    T1,
    T2,
    T3,
    T4,
    T5,
    ZP1,
    ZP2,
    ZP3,
}

pub fn category_parser<'a>(input: &mut &'a str) -> PResult<VerbCategory> {
    alt((
        alt((
            "IV¹".value(VerbCategory::IV1),
            "IV²".value(VerbCategory::IV2),
            "IV³".value(VerbCategory::IV3),
            "IV⁴".value(VerbCategory::IV4),
            "KT".value(VerbCategory::KT),
            "MV".value(VerbCategory::MV),
            "P¹".value(VerbCategory::P1),
            "P²".value(VerbCategory::P2),
            "P³".value(VerbCategory::P3),
            "RM¹".value(VerbCategory::RM1),
            "RM²".value(VerbCategory::RM2),
            "RM³".value(VerbCategory::RM3),
            "RM⁴".value(VerbCategory::RM4),
        )),
        alt((
            "RP¹".value(VerbCategory::RP1),
            "RP²".value(VerbCategory::RP2),
            "RP³".value(VerbCategory::RP3),
            "RP⁴".value(VerbCategory::RP4),
            "RP⁵".value(VerbCategory::RP5),
            "RP⁶".value(VerbCategory::RP6),
            "RP⁷".value(VerbCategory::RP7),
            "T¹".value(VerbCategory::T1),
            "T²".value(VerbCategory::T2),
            "T³".value(VerbCategory::T3),
            "T⁴".value(VerbCategory::T4),
            "T⁵".value(VerbCategory::T5),
            "ZP¹".value(VerbCategory::ZP1),
            "ZP²".value(VerbCategory::ZP2),
            "ZP³".value(VerbCategory::ZP3),
        )),
    ))
    .context(StrContext::Label("category"))
    .parse_next(input)
}
